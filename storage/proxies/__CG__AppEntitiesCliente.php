<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cliente extends \App\Entities\Cliente implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'tipo', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'cnpjCpf', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'insEstadual', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'razaoSocial', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'fantasia', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'endereco', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'numero', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'complemento', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'pontoReferencia', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'bairro', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'cep', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'observacao', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'dataCadastro', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'cidade', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'segmento', 'contatos'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'id', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'tipo', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'cnpjCpf', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'insEstadual', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'razaoSocial', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'fantasia', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'endereco', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'numero', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'complemento', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'pontoReferencia', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'bairro', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'cep', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'observacao', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'dataCadastro', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'cidade', '' . "\0" . 'App\\Entities\\Cliente' . "\0" . 'segmento', 'contatos'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cliente $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTipo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTipo', []);

        return parent::getTipo();
    }

    /**
     * {@inheritDoc}
     */
    public function setTipo(string $tipo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTipo', [$tipo]);

        return parent::setTipo($tipo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCnpjCpf()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCnpjCpf', []);

        return parent::getCnpjCpf();
    }

    /**
     * {@inheritDoc}
     */
    public function setCnpjCpf(string $cnpjCpf)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCnpjCpf', [$cnpjCpf]);

        return parent::setCnpjCpf($cnpjCpf);
    }

    /**
     * {@inheritDoc}
     */
    public function getInsEstadual()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInsEstadual', []);

        return parent::getInsEstadual();
    }

    /**
     * {@inheritDoc}
     */
    public function setInsEstadual(string $insEstadual)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInsEstadual', [$insEstadual]);

        return parent::setInsEstadual($insEstadual);
    }

    /**
     * {@inheritDoc}
     */
    public function getRazaoSocial()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRazaoSocial', []);

        return parent::getRazaoSocial();
    }

    /**
     * {@inheritDoc}
     */
    public function setRazaoSocial(string $razaoSocial)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRazaoSocial', [$razaoSocial]);

        return parent::setRazaoSocial($razaoSocial);
    }

    /**
     * {@inheritDoc}
     */
    public function getFantasia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFantasia', []);

        return parent::getFantasia();
    }

    /**
     * {@inheritDoc}
     */
    public function setFantasia($fantasia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFantasia', [$fantasia]);

        return parent::setFantasia($fantasia);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndereco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndereco', []);

        return parent::getEndereco();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndereco(string $endereco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndereco', [$endereco]);

        return parent::setEndereco($endereco);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumero()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumero', []);

        return parent::getNumero();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumero(string $numero)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumero', [$numero]);

        return parent::setNumero($numero);
    }

    /**
     * {@inheritDoc}
     */
    public function getComplemento()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComplemento', []);

        return parent::getComplemento();
    }

    /**
     * {@inheritDoc}
     */
    public function setComplemento($complemento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComplemento', [$complemento]);

        return parent::setComplemento($complemento);
    }

    /**
     * {@inheritDoc}
     */
    public function getPontoReferencia()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPontoReferencia', []);

        return parent::getPontoReferencia();
    }

    /**
     * {@inheritDoc}
     */
    public function setPontoReferencia($pontoReferencia)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPontoReferencia', [$pontoReferencia]);

        return parent::setPontoReferencia($pontoReferencia);
    }

    /**
     * {@inheritDoc}
     */
    public function getBairro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBairro', []);

        return parent::getBairro();
    }

    /**
     * {@inheritDoc}
     */
    public function setBairro(string $bairro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBairro', [$bairro]);

        return parent::setBairro($bairro);
    }

    /**
     * {@inheritDoc}
     */
    public function getCep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCep', []);

        return parent::getCep();
    }

    /**
     * {@inheritDoc}
     */
    public function setCep($cep)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCep', [$cep]);

        return parent::setCep($cep);
    }

    /**
     * {@inheritDoc}
     */
    public function getObservacao()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObservacao', []);

        return parent::getObservacao();
    }

    /**
     * {@inheritDoc}
     */
    public function setObservacao($observacao)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setObservacao', [$observacao]);

        return parent::setObservacao($observacao);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataCadastro()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataCadastro', []);

        return parent::getDataCadastro();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataCadastro($dataCadastro)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataCadastro', [$dataCadastro]);

        return parent::setDataCadastro($dataCadastro);
    }

    /**
     * {@inheritDoc}
     */
    public function getCidade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCidade', []);

        return parent::getCidade();
    }

    /**
     * {@inheritDoc}
     */
    public function setCidade($cidade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCidade', [$cidade]);

        return parent::setCidade($cidade);
    }

    /**
     * {@inheritDoc}
     */
    public function getSegmento()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSegmento', []);

        return parent::getSegmento();
    }

    /**
     * {@inheritDoc}
     */
    public function setSegmento($segmento)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSegmento', [$segmento]);

        return parent::setSegmento($segmento);
    }

    /**
     * {@inheritDoc}
     */
    public function addContato(\App\Entities\Contato $contato)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContato', [$contato]);

        return parent::addContato($contato);
    }

    /**
     * {@inheritDoc}
     */
    public function getContato()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContato', []);

        return parent::getContato();
    }

    /**
     * {@inheritDoc}
     */
    public function setAll(array $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAll', [$data]);

        return parent::setAll($data);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

}
